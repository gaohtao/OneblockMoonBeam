作业：（编程题）作为一个DAO，我们不应该使用AccessControl和Role来管理权限，而是使用链上治理或投票机制来决定什么时候DAO可以进入“撤销中”状态或重置状态。请以此命题来编写DelegationDAO升级版，您可以实现一个简单的链上投票功能或使用现有的投票或治理库。

设计思路：设定一个撤销投票计数器，参与撤销投票的人数达到质押总人数的2/3，任何人都可以发起撤销了。用户点击撤销按钮，就发起一次撤销投票，只能投票一次。

合约质押状态阈值修改为0.05DEV，每次质押0.01DEV，一共5个人就够了。
账户1 0xAb29311ebD97c473ADB8BCD7BB78A4C1184F5cB4
账户2 0x8C30e01e8322A16b5E94ad635aFD7aBB5bb0Ca8b
账户3 0xf24FF3a9CF04c71Dbc94D0b566f7A27B94566cac
账户4 0x3Cd0A705a2DC65e5b1E1205896BaA2be8A07c6e0
账户5 0xa8b0Bceddd4FE28bFde9Ca441b1060653E249C13

在Remix中设计的操作步骤：
（1）部署DelegationDAO合约： 
         参数1  选举人地址，0x9658121Ae8e9Afb2a0134D8C3B5121aF915B10B0
         参数2  admin 为账户1
（2）查看 质押状态currentState=0，表示COLLECTING
（3）管理员账户调用grant_member(账户2)，添加账户2为成员。
                                  grant_member(账户3)，添加账户3为成员。
                                  grant_member(账户4)，添加账户4为成员。
                                  grant_member(账户5)，添加账户5为成员。
（4）账户1调用add_stake()，质押0.01DEV
         账户2调用add_stake()，质押0.01DEV
         账户3调用add_stake()，质押0.01DEV
         账户4调用add_stake()，质押0.01DEV
         账户5调用add_stake()，质押0.01DEV。
                  账户5质押成功后合约状态自动切换：COLLECTING-->STAKING
（5）查看质押总人数 stakeHeadCount =5
         质押状态currentState=1，表示STAKING
（6）账户1、2、3、4调用userRequestRevoke(),  查看revokeRequestHeadCount=4
（7）账户4调用schedule_revoke2()，这时撤销申请票数4超过质押总人数的2/3，发起撤销成功。 合约状态自动切换：STAKING-->REVOKING
（8）等待4个小时，发起withdraw(), 提取质押款。成功。
        查看状态切换为 REVOKING->REVOKED


【遇到问题1】：合约中的质押阈值必须是5ETH，原因是staking接口内部限制了质押总额最小值是5ETH，低于该值引起接口函数调用失败，DelegationDAO合约状态不能切换到STAKING。
必须申请到足够的测试币DEV，不断地质押进去达到5个条件。
【遇到问题2】合约状态切换到REVOKING之后，调用withdraw失败，无法撤销质押。
必须等待4个小时，之后在调用withdraw成功返回质押代币。推测是staking接口内部要等待4小时以上才能返回正确。


